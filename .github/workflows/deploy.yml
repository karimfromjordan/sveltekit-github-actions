name: test-build-deploy
run-name: Test, Build and Deploy
on:
  push:
    branches:
      - 'main'
jobs:
  test:
    runs-on: ubuntu-22.04
    steps:
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Checkout
        uses: actions/checkout@v3

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Install Playwright browsers
        run: pnpx playwright install --with-deps

      - name: Run Playwright tests
        run: pnpm test

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 5

  build:
    needs: test
    runs-on: ubuntu-22.04
    steps:
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Checkout app
        uses: actions/checkout@v3
        with:
          path: app-repo

      - name: Install app dependencies
        run: cd app-repo && pnpm install --frozen-lockfile

      - name: Build app
        run: cd app-repo && pnpm build

      - name: Delete app development dependencies
        run: cd app-repo && pnpm prune --prod

      - name: Install Golang
        uses: actions/setup-go@v4
        with:
          go-version: 'stable'

      - name: Checkout canonical/chisel
        uses: actions/checkout@v3
        with:
          repository: canonical/chisel
          path: chisel-repo

      - name: Build chisel
        run: cd chisel-repo && ./cmd/mkversion.sh && go build -o $(pwd) $(pwd)/cmd/chisel && mv chisel $GITHUB_WORKSPACE

      - name: Create container file structure
        run: |
          mkdir -p \
            container/dev \
            container/etc/systemd/system \
            container/opt/app \
            container/proc \
            container/run \
            container/sys \
            container/tmp \
            container/usr/lib \
            container/var/lib/services/${GITHUB_REPOSITORY##*/} \
            container/var/tmp

          touch \
            container/etc/machine-id \
            container/etc/resolv.conf \
            container/usr/lib/os-release

      - name: Copy slices into container
        run: ./chisel cut --root container ca-certificates_data libstdc++6_libs

      - name: Copy node binary into container
        run: cp $(which node) container/opt

      - name: Copy app into container
        run: cp -r app-repo/{build,node_modules,package.json} container/opt/app

      - name: Create .service file
        run: |
          cat <<-EOF > container/etc/systemd/system/${GITHUB_REPOSITORY##*/}.service
          [Unit]
          Description=$GITHUB_REPOSITORY
          StartLimitBurst=5
          StartLimitIntervalSec=60

          [Service]
          DynamicUser=yes
          StateDirectory=services/${GITHUB_REPOSITORY##*/}
          Environment=PORT=5001 NODE_ENV=production
          ExecStart=/opt/node /opt/app/build
          Restart=on-failure

          [Install]
          WantedBy=multi-user.target
          EOF

      - name: Compress container
        run: |
          mksquashfs \
            container \
            "${GITHUB_REPOSITORY##*/}_$(date --utc '+%F.%H%M')".raw \
            -exit-on-error \
            -quiet \
            -all-root

      - uses: actions/upload-artifact@v3
        with:
          name: container
          path: '*.raw'
          retention-days: 1

  deploy:
    needs: build
    runs-on: ubuntu-22.04
    steps:
      - name: Install SSH key
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_ed25519
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          ssh-keyscan -H s1.winter-rose.design > ~/.ssh/known_hosts

      - name: Copy container to server
        run: |
          scp ${{ SSH_USER }}@s1.winter-rose.design:/
          sudo mv ~/*.raw /var/lib/portables

      - name: Start container
        run: |
          sudo portablectl \
            --enable \
            --now \
            --profile=trusted \
            container.raw

      - name: Cleanup
        run: rm -rf ~/.ssh
